#! /usr/bin/env python3
import argparse
import os
import random
import string

def ensure_one_upper(s):
    if any(map(lambda c: c in string.ascii_uppercase, s)):
        return s
    hasupper = False
    ans = list(s)
    for index, char in enumerate(ans):
        if char in string.ascii_lowercase:
            ans[index] = char.upper()
            hasupper = True
            break
    if not hasupper:
        ans.insert(0, random.choice(string.ascii_uppercase))
    return "".join(ans)

def ensure_one_number(s):
    assert type(s) is list
    for word in s:
        if word in string.digits or any(map(lambda c: c in string.digits, word)):
            return s
    ans = list(s)
    ans.insert(random.randint(0, len(s)), random.choice(string.digits))
    return ans


if __name__ == "__main__":
    wordlist_name = "beale.wordlist.asc"
    wordlist_dir = '/usr/local/share/newpassword/'
    if os.path.exists(wordlist_name):
        wordlist_dir = os.getcwd()
    with open(os.path.join(wordlist_dir, wordlist_name)) as fp:
        parser = argparse.ArgumentParser()
        parser.add_argument("--num_words", type=int, default=3)
        parser.add_argument("--caps", action="store_true")
        parser.add_argument("--number", action="store_true")
        parser.add_argument("--separator", type=str, default='-')
        args = parser.parse_args()
        lines = fp.readlines()[2:-10]
        random.shuffle(lines)
        p = [l.strip() for l in  lines[:args.num_words]]
        passwords = [i.split()[1] for i in p]
        if args.number:
            passwords = ensure_one_number(passwords)
        ans = args.separator.join(passwords)
        if args.caps:
            ans = ensure_one_upper(ans)
        print(ans)
